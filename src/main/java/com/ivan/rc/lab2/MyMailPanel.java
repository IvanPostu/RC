/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ivan.rc.lab2;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.internet.MimeMultipart;
import javax.swing.DefaultListModel;

/**
 *
 * @author ivan
 */
public class MyMailPanel extends javax.swing.JPanel {

    private EmailWorker emailWorker = new EmailWorker();
    private Message[] messagesList;


    /**
     * Creates new form MyMailPanel
     */
    public MyMailPanel() {
        initComponents();
    }
    
    private String getTextFromMessage(Message message) throws MessagingException, IOException {
    String result = "";
    if (message.isMimeType("text/plain")) {
        result = message.getContent().toString();
    } else if (message.isMimeType("multipart/*")) {
        MimeMultipart mimeMultipart = (MimeMultipart) message.getContent();
        result = getTextFromMimeMultipart(mimeMultipart);
    }
    return result;
}

private String getTextFromMimeMultipart(
        MimeMultipart mimeMultipart)  throws MessagingException, IOException{
    String result = "";
    int count = mimeMultipart.getCount();
    for (int i = 0; i < count; i++) {
        BodyPart bodyPart = mimeMultipart.getBodyPart(i);
        if (bodyPart.isMimeType("text/plain")) {
            result = result + "\n" + bodyPart.getContent();
            break; // without break same text appears twice in my tests
        } else if (bodyPart.isMimeType("text/html")) {
            String html = (String) bodyPart.getContent();
            result = result + "\n" + html;//org.jsoup.Jsoup.parse(html).text();
        } else if (bodyPart.getContent() instanceof MimeMultipart){
            result = result + getTextFromMimeMultipart((MimeMultipart)bodyPart.getContent());
        }
    }
    return result;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messages = new javax.swing.JList<>();
        fetchMessagesButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        outTextArea = new javax.swing.JTextArea();
        infoButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 255, 102));
        setPreferredSize(new java.awt.Dimension(800, 430));

        jScrollPane1.setViewportView(messages);

        fetchMessagesButton.setText("Fetch your messages");
        fetchMessagesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchMessagesButtonActionPerformed(evt);
            }
        });

        outTextArea.setColumns(20);
        outTextArea.setRows(5);
        jScrollPane2.setViewportView(outTextArea);

        infoButton.setText("Info");
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(infoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fetchMessagesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fetchMessagesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fetchMessagesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchMessagesButtonActionPerformed
        Message[] messagesFromEmails = emailWorker.fetchMessages();
        messagesList = messagesFromEmails;
//        messages.setModel(new DefaultListModel());

        final DefaultListModel model = new DefaultListModel();
        for (int i = 0; i < messagesFromEmails.length; i++) {
            try {
                String title = String.format("%s", messagesFromEmails[i].getSubject());
                model.add(i, new Object(){
                    @Override
                    public String toString(){
                        return title;
                    }
                });
            } catch (MessagingException ex) {
                System.out.println(ex.getMessage());
            }

        }

        messages.setModel(model);

    }//GEN-LAST:event_fetchMessagesButtonActionPerformed

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        int index = messages.getSelectedIndex();
        
        if(index == -1) return;
        
        Message msg = messagesList[index];
        String textMessage = "";
        try {
            textMessage = getTextFromMessage(msg);
//        String outMessage = String.format("Subject: %s\n", msg.getSubject(), msg.get);
        } catch (MessagingException ex) {
            Logger.getLogger(MyMailPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MyMailPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            textMessage = "FRom: " + msg.getFrom()[0].toString() + "\n" + textMessage;
            outTextArea.setText(textMessage);
        } catch (MessagingException ex) {
            Logger.getLogger(MyMailPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        outTextArea.setText(textMessage);
        
    }//GEN-LAST:event_infoButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fetchMessagesButton;
    private javax.swing.JButton infoButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> messages;
    private javax.swing.JTextArea outTextArea;
    // End of variables declaration//GEN-END:variables
}
